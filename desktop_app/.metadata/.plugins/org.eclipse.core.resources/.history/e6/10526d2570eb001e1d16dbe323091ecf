import javax.crypto.Cipher;
	import javax.crypto.spec.SecretKeySpec;

import java.nio.charset.StandardCharsets;
import java.security.KeyFactory;
import java.security.PrivateKey;
import java.security.spec.PKCS8EncodedKeySpec;
import java.util.Base64;
	
public class Encryption {
	
    public static String decrypt(String encryptedMessage, String privateKeyString) throws Exception {
        byte[] privateKeyBytes = Base64.getDecoder().decode(privateKeyString.getBytes());
        PKCS8EncodedKeySpec privateKeySpec = new PKCS8EncodedKeySpec(privateKeyBytes);
        KeyFactory keyFactory = KeyFactory.getInstance("RSA");

        PrivateKey privateKey= keyFactory.generatePrivate(privateKeySpec);

        Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
        cipher.init(Cipher.DECRYPT_MODE, privateKey);
        return new String(cipher.doFinal(Base64.getDecoder().decode(encryptedMessage)), StandardCharsets.UTF_8);
    }
	    
	    public static String getKey() {	
	    	String encKey = "kwPuZcRMlBtk3w0c7J0nL8I/6tcyX/9gx1u/cA13nQcsqYqWRobEBwfCI+56G4Ra1M7UW07NWeksZfR53yVE0aulaKv8dXWihtjdL2FXYDYduJkYGqdXE/ms1ffwmAkm7rrOVMBYI0r9xusKRNFnbHq5Q1jPokjUYDGhibI/7i4T5QoRrlKoZIOUC+v6wrQguA/YzIPrZ5X4j/9mhNA9zueh1wU+LlBObEs6XGWLzjarrNkaoGZr8Y39/xKP/8TPh5SWGjT4/E5sdAh9oMdWjHAE90UN1xsTRPJlhVQaeniGXDnn/EPa3ZFeLzuu+l8dKP1sPA6kMxuY6zN9dCcnMA==";
	    	return encKey;
	    }
}
